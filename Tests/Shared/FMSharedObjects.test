(* :Title: FMToStandardSpinorChains.test														*)

(*
	This software is covered by the GNU General Public License 3.
	Copyright (C) 2015 Vladyslav Shtabovenko
*)

(* :Summary:  Framework independent unit tests for FMSharedObjects	*)

(* ------------------------------------------------------------------------ *)

Tests`Shared`FMSharedObjectsFMStandardSpinorChain =
({
{"FMSharedObjectsFMStandardSpinorChain-ID1",
"FMStandardSpinorChain[\"T\", 1, {p1, m1}, {p2, m2}, ExplicitLorentzIndex[0], ExplicitLorentzIndex[0]]",
"0"},
{"FMSharedObjectsFMStandardSpinorChain-ID2",
"FMStandardSpinorChain[\"T\", 1, {p1, m1}, {p2, m2}, CartesianIndex[i],
CartesianIndex[i]]","0"},
{"FMSharedObjectsFMStandardSpinorChain-ID3",
"FMStandardSpinorChain[\"T\", 1, {p1, m1}, {p2, m2}, CartesianMomentum[p],
CartesianMomentum[p]]","0"},
{"FMSharedObjectsFMStandardSpinorChains-ID4",
"FMStandardSpinorChain[\"T\", 1, {p1, m1}, {p2, m2}, CartesianMomentum[p],ExplicitLorentzIndex[0]]",
"-FMStandardSpinorChain[\"T\", 1, {p1, m1}, {p2, m2}, ExplicitLorentzIndex[0],CartesianMomentum[p]]"},
{"FMSharedObjectsFMStandardSpinorChain-ID5",
"FMStandardSpinorChain[\"T\", 1, {p1, m1}, {p2, m2}, CartesianIndex[i],ExplicitLorentzIndex[0]]",
"-FMStandardSpinorChain[\"T\", 1, {p1, m1}, {p2, m2}, ExplicitLorentzIndex[0],CartesianIndex[i]]"}
});


Tests`Shared`FMSharedObjectsFMBlockMatrixProduct =
({
{"FMSharedObjectsFMBlockMatrixProduct-ID1",
"FMBlockMatrixProduct[a,b]", "FMBlockMatrixProduct[a, b]"},
{"FMSharedObjectsFMBlockMatrixProduct-ID2",
"FMBlockMatrixProduct[a,0,b]", "0"},
{"FMSharedObjectsFMBlockMatrixProduct-ID3",
"FMBlockMatrixProduct[{{a1,a2},{a3,a4}},{{b1},{b2}}]",
"{{a1 . b1 + a2 . b2}, {a3 . b1 + a4 . b2}}"},
{"FMSharedObjectsFMBlockMatrixProduct-ID4",
"FMBlockMatrixProduct[{{0,SI[i]},{-SI[i],0}},{{1,0},{0,-1}}]",
"{{0 . 1 + SI[i] . 0, 0 . 0 + SI[i] . (-1)}, {0 . 0 + (-SI[i]) . \
1, 0 . (-1) + (-SI[i]) . 0}}"},
{"FMSharedObjectsFMBlockMatrixProduct-ID5",
"FMBlockMatrixProduct[{{0,SI[i]},{-SI[i],0}},{{PauliXi[I]},{\
PauliXi[I]}}]",
"{{0 . PauliXi[I] + SI[i] . PauliXi[I]}, {0 . PauliXi[I] + \
(-SI[i]) . PauliXi[I]}}"},
{"FMSharedObjectsFMBlockMatrixProduct-ID6",
"FMBlockMatrixProduct[{PauliEta[-I],PauliEta[-I]},{{0,SI[i]},{-SI[\
i],0}},{{PauliXi[I]},{PauliXi[I]}}]",
"PauliEta[-I] . (0 . PauliXi[I] + (-SI[i]) . PauliXi[I]) + \
PauliEta[-I] . (0 . PauliXi[I] + SI[i] . PauliXi[I])"}
})


Tests`Shared`FMComponents =
({
{"FMComponents-ID1", "FMTraceComponent[{a,b},{i,j},FCE->True]",
"(CSP[a, b]*KD[i, j])/3"},
{"FMComponents-ID2",
"FMSymmetricTracelessComponent[{a,b},{i,j},FCE->True]",
"(CV[a, j]*CV[b, i] + CV[a, i]*CV[b, j])/2 - (CSP[a, b]*KD[i, \
j])/3"},
{"FMComponents-ID3",
"FMAntiSymmetricComponent[{a,b},{i,j},FCE->True]",
"(-(CV[a, j]*CV[b, i]) + CV[a, i]*CV[b, j])/2"},
{"FMComponents-ID4",
"FMTraceComponent[{a,b},{i,j},Explicit\[Rule]False]",
"FMTraceComponent[{a, b}, {CartesianIndex[i], CartesianIndex[j]}, \
Explicit -> False]"},
{"FMComponents-ID5",
"FMAntiSymmetricComponent[{a,b},{i,j},Explicit\[Rule]False]",
"FMAntiSymmetricComponent[{a, b}, {CartesianIndex[i], \
CartesianIndex[j]}, Explicit -> False]"},
{"FMComponents-ID6",
"FMSymmetricTracelessComponent[{a,b},{i,j},Explicit\[Rule]False]",
"FMSymmetricTracelessComponent[{a, b}, {CartesianIndex[i], \
CartesianIndex[j]}, Explicit -> False]"},
{"FMComponents-ID7",
"Contract[FMTraceComponent[{a,b},{i,j},Explicit\[Rule]False]CV[d,i]\
]", "FMTraceComponent[{a, b}, {CartesianMomentum[d], \
CartesianIndex[j]}, Explicit -> False]"},
{"FMComponents-ID8",
"Contract[FMTraceComponent[{a,b},{i,j},Explicit\[Rule]False]CV[d,i]\
CV[e,j]]",
"FMTraceComponent[{a, b}, {CartesianMomentum[d], \
CartesianMomentum[e]}, Explicit -> False]"},
{"FMComponents-ID9",
"Contract[FMAntiSymmetricComponent[{a,b},{i,j},Explicit\[Rule]\
False]CV[d,i]]",
"FMAntiSymmetricComponent[{a, b}, {CartesianMomentum[d], \
CartesianIndex[j]}, Explicit -> False]"},
{"FMComponents-ID10",
"Contract[FMAntiSymmetricComponent[{a,b},{i,j},Explicit\[Rule]\
False]CV[d,i]CV[e,j]]",
"FMAntiSymmetricComponent[{a, b}, {CartesianMomentum[d], \
CartesianMomentum[e]}, Explicit -> False]"},
{"FMComponents-ID11",
"Contract[FMSymmetricTracelessComponent[{a,b},{i,j},Explicit\[Rule]\
False]CV[d,i]]",
"FMSymmetricTracelessComponent[{a, b}, {CartesianMomentum[d], \
CartesianIndex[j]}, Explicit -> False]"},
{"FMComponents-ID12",
"Contract[FMSymmetricTracelessComponent[{a,b},{i,j},Explicit\[Rule]\
False]CV[d,i]CV[e,j]]",
"FMSymmetricTracelessComponent[{a, b}, {CartesianMomentum[d], \
CartesianMomentum[e]}, Explicit -> False]"}
})




